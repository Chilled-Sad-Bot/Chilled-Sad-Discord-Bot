name: Deployment Test Build

on:
    pull_request:
        branches: [dev, main, beta]

jobs:
    test-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Install test env data
              run: |
                  cp .env.example .env
                  echo ${{ secrets.TEST_TOKEN }} >> .env
                  echo ${{ secrets.TEST_TOKEN }} >> .env
                  echo ${{ secrets.TEST_SECRET }} >> .env
                  echo ${{ secrets.TEST_APPLICATION_ID }} >> .env
                  echo ${{ secrets.TEST_DEVELOPER_DISCORD_GUILD_ID }} >> .env

            # set nodeenv to production and run npm run start
            - name: Start Container
              run: |
                  NODE_ENV=production npm run start

            - name: Wait 10 seconds and check if all containers are healthy without any npm commands
              run: |
                  sleep 10
                  docker ps -a                  
                  docker inspect --format='{{json .State.Health}}' bot
                  docker inspect --format='{{json .State.Health}}' mysql
                  docker inspect --format='{{json .State.Health}}' mysql-backup

                  

            - name: Stop Container
              run: |
                  npm run stop

            - name: Stop Workflow
              if: steps.check_condition.outputs.stop_workflow == 'true'
              run: |
                  echo "Stopping workflow"
                  exit 0
